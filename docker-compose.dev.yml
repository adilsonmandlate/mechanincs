services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3333:3333"
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - node_modules/
            - build/
            - .git/
            - .github/
        - action: rebuild
          path: package.json
        - action: rebuild
          path: tsconfig.json

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - app
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: mechanics
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_mechanics:/var/lib/postgresql/data
    networks:
      - app
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U root -d mechanics']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  postgres_data_mechanics:
  redis_data:

networks:
  app:
    driver: bridge
